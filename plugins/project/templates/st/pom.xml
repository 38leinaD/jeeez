<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>jz</groupId>
	<artifactId>template-artifactid</artifactId>
	<version>1.0-SNAPSHOT</version>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.10.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.glassfish.jersey.core</groupId>
		    <artifactId>jersey-client</artifactId>
		    <version>2.26</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.glassfish.jersey.inject</groupId>
		    <artifactId>jersey-hk2</artifactId>
		    <version>2.26</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.glassfish.jersey.media</groupId>
		    <artifactId>jersey-media-json-processing</artifactId>
		    <version>2.26</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.glassfish.jersey.media</groupId>
		    <artifactId>jersey-media-json-binding</artifactId>
		    <version>2.26</version>
		    <scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>template-artifactid</finalName>
		<plugins>
		<plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-failsafe-plugin</artifactId>
	        <version>2.21.0</version>
	        <configuration>
	          <includes>
	            <include>**/*IT.java</include>
	            <include>**/*ST.java</include>
	          </includes>
	        </configuration>
	        <executions>
	          <execution>
	            <goals>
	              <goal>integration-test</goal>
	              <goal>verify</goal>
	            </goals>
	          </execution>
	        </executions>
	      </plugin>
	      <plugin>
	        <groupId>io.fabric8</groupId>
	        <artifactId>docker-maven-plugin</artifactId>
	        <version>0.26.0</version>
	        <configuration>
	          <images>
	            <image>
	            <alias>appsvr</alias>
	              <name>${project.groupId}/${project.artifactId}:latest</name>
	              	<run>

		              <wait>
						  <http>
						    <url>http://localhost:80/myapp/resources/health</url>
						    <method>GET</method>
						    <status>200</status>
						  </http>
						  <time>30000</time>
						  <!-- Did not work; need to explictly define a healthcheck here as well  -->
						  <!--healthy>true</healthy-->
						</wait>
					  </run>
		              <external>
		                <type>compose</type>
		                <basedir>.</basedir> 
	     				<composeFile>${composeFile}</composeFile>
		              </external>
		            </image>
	          </images>
	        </configuration>
	        <executions>
			    <execution>
			       <id>start</id>
			       <phase>pre-integration-test</phase>
			       <goals>
			         <goal>start</goal>
			       </goals>
			    </execution>
			    <execution>
			       <id>stop</id>
			       <phase>post-integration-test</phase>
			       <goals>
			         <goal>stop</goal>
			      </goals>
			    </execution>
		  	</executions>
	      </plugin>
	    </plugins>
	</build>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>8</maven.compiler.source>
		<maven.compiler.target>8</maven.compiler.target>
		<!-- DPMOD -->
		<docker.showLogs>true</docker.showLogs>
		<composeFile>docker-compose.yml</composeFile>
	</properties>
</project>