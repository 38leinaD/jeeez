plugins {
    id 'com.avast.gradle.docker-compose' version '0.7.1'
}

apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.10.0'
}

dependencies {
    testCompile 'org.glassfish.jersey.core:jersey-client:2.26'
	testCompile 'org.glassfish.jersey.inject:jersey-hk2:2.26'

	testCompile 'org.glassfish.jersey.media:jersey-media-json-processing:2.26'
	testCompile 'org.glassfish.jersey.media:jersey-media-json-binding:2.26'

    implementation platform('org.jboss.arquillian:arquillian-bom:1.4.1.Final')
    testCompile "org.jboss.arquillian.junit:arquillian-junit-container"
    testCompile "org.jboss.arquillian.graphene:graphene-webdriver:2.3.2"
}

test {
    exclude '**/*IT.class'
    exclude '**/*ST.class'
}

task systemTestClientOnly(type: Test) {
    group 'verification'
    description 'Run system-tests (without environment)'
    dependsOn 'build'
    outputs.upToDateWhen {
        return false
    }
    include '**/*ST.class'

}

task systemTest(type: Test) {
    group 'verification'
    description 'Run system-tests (in Docker environment)'
    dependsOn 'build'
    outputs.upToDateWhen {
        return false
    }
    include '**/*ST.class'
    doFirst {
        dockerCompose.exposeAsEnvironment(systemTest)
    }
}

dockerCompose {
    useComposeFiles = [project.hasProperty('composeFile') ? project.getProperty('composeFile') : 'docker-compose.yml']
    captureContainersOutput = true
    waitForHealthyStateTimeout = java.time.Duration.ofSeconds(60)
    isRequiredBy(project.tasks.systemTest)
}