#!/bin/bash
set -e
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

list() {
    find $DIR -maxdepth 1 -type d -print
}

info() {
    echo -e "$1"
}

error() {
    echo -e "${RED}$1${NC}"
}

warn() {
    echo -e "${YELLOW}$1${NC}"
}

usage() {
    info "jeeez (short: jz) - command-line Java EE project scaffolding tool"
    info "Usage: $(basename $0) [groupid.]artifactid [options]"
    info ""
    info "    --jee-version: default: 7"
    info ""
    info "Example: $(basename $0) de.dplatz.myapp"
    info "    This will use the defaults and create a project that..."
    info "    - is Java EE 7-compliant,"
    info "    - packages as a WAR archive,"
    info "    - has group-id \"de.dplatz\","
    info "    - has artifact-id \"myapp\","
    info "    - and builds with Gradle and Maven."
}

scaffold() {
    local groupid=$1
    local artifactid=$2
    local template=$3
    
    cp -r $DIR/$template $artifactid

    find $artifactid -type d -name "packagename" | while read dir; do
        # Derive packagenames from groupid/artifactid
        local parent=$(dirname $dir)
        local artifact_dir="${artifactid//-/}"
        local package_dirs="${groupid//.//}/${artifact_dir}"
        local package_path="$parent/$package_dirs"
        mkdir -p "$package_path"
        mv $dir/* $package_path/ || true
        rm -rf $dir
    done

    # Fix packagenames in Java-code
    local java_package_name="${groupid}.${artifactid//-/}"
    find $artifactid -type f \( -name "*.java" -o -name "build.gradle" \) -exec sed -i "s/packagename/${java_package_name}/g" {} \;

    # Fix subproject folder-names
    find $artifactid -type d -name "template-artifactid-*" -print0
    find $artifactid -type d -name "template-artifactid-*" | while read file; do \
        #dir=$(dirname $f)
        #file=$(basename $f)
        #rename "s/template-artifactid-(.*)\$/$artifactid-\$1/" $f
        newfile=${file/template-artifactid/$artifactid}
        mv $file $newfile
    done;

    # Set groupid/artifactid in pom.xml/build.gradle
    find $artifactid -type f -exec sed -i "s/template-artifactid/${artifactid}/g" {} \;
    find $artifactid -type f -exec sed -i "s/template-groupid/${groupid}/g" {} \;

    if [[ "$artifactid" == *-st ]]; then
        # This is a system-test project
        # Fint the main project this belongs to
        parentid=${artifactid%-st}
        if [ -d "$parentid" ]; then
            parentpath=$(realpath $parentid)
            info "Found parent-project @ $parentpath"
            echo "PROJECT=$parentpath" >> $artifactid/.env
            echo "COMPOSE_PROJECT_NAME=$parentid" >> $artifactid/.env
            find $parentpath -type f -exec sed -i "s/appname/${parentid}/g" {} \;
            find $artifactid -type f -exec sed -i "s/appname/${parentid}/g" {} \;
        else
            error "Expected a main-project named '$parentid' but unable to find."
            exit 1
        fi

        info "Created project with artifact-id '$artifactid' and group-id '$groupid' from template '$template'."
        info "Run them with 'cd $artifactid; ./gradlew systemTestInDockerEnv'."
        warn "This project only works in conjunction with the project named '$parentid'."
        warn "Make sure to run './gradlew build' on it at least once to generate the artifact to deploy."
    else
        info "Created a system-test project with artifact-id '$artifactid' and group-id '$groupid' from template '$template'."
        info "Build & run it with 'cd $artifactid; ./run_docker.sh'."
        info "Open http://localhost/$artifactid/resources/health after the sever is started."
    fi
    #tree -C $artifactid/
}

case $1 in
    -l|--list)
    list
    exit 0
    ;;
    -h|--help)
    usage
    exit 0
    ;;
esac

if [ "$1" == "" ]; then
    usage
    exit 1
fi

project_name=$1
shift

while [ $# -gt 0 ]; do
  case "$1" in
    --jee-version=*)
      jee_version="${1#*=}"
      ;;
    --template=*)
      template="${1#*=}"
      ;;
    --st)
      # If we are generating a system-test project, append "-st" to project-name
      project_name="${project_name}-st"
      template="st"
      ;;
    *)
      error "Invalid argument"
      exit 1
  esac
  shift
done

if [ -z "$template" ]; then
    template="war"
fi

if [ -z "$jee_version" ]; then
    jee_version="7"
fi

if [ -z "$jee_version" ]; then
    jee_version="7"
fi

if [[ $(expr index "$project_name" .) != "0" ]] ; then
echo "IN HERE"
    # project-name contains dot and thus a group-id
    groupid=$(echo "$project_name" | rev | cut -d"." -f2-  | rev)
    artifactid=$(echo "$project_name" | rev | cut -d"." -f1  | rev)
else
    groupid="de.dplatz"
    artifactid="$project_name"
fi

if ! [ -d $DIR/$template ]; then
    error "No template with name '$template'"
    exit 1
fi

scaffold $groupid $artifactid $template